# Database Agent Job Example
# Demonstrates SQL operations in agent jobs

steps:
  - name: Database Health Check
    action: python
    script: |
      import os
      import json
      from datetime import datetime
      
      # Simulate database connection check
      print("🔍 Checking database connectivity...")
      
      # In a real scenario, you would connect to your database here
      # For this example, we'll simulate the check
      db_status = {
          "connection": "successful",
          "server": "your-db-server",
          "database": "your-database",
          "timestamp": datetime.now().isoformat(),
          "agent": os.environ.get('AGENT_ID', 'unknown')
      }
      
      print(f"✅ Database connection: {db_status['connection']}")
      print(f"📊 Server: {db_status['server']}")
      
      # Save results
      with open('./db_check_result.json', 'w') as f:
          json.dump(db_status, f, indent=2)
      
      print("💾 Results saved to db_check_result.json")
    timeout: 120

  - name: Generate Database Report
    action: shell
    command: |
      echo "📋 Generating database report..."
      
      # Create a simple report
      cat > db_report.txt << EOF
=== Database Health Report ===
Generated by: $AGENT_ID
Job ID: $JOB_ID
Timestamp: $(date)

Database Status: $(cat db_check_result.json | grep -o '"connection":"[^"]*' | cut -d'"' -f4)

Report completed successfully.
EOF
      
      echo "📄 Report generated: db_report.txt"
      cat db_report.txt
    timeout: 60